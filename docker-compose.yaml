version: '3.8'

services:
  db:
    container_name: foodgram-db
    image: postgres:12.4
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
  web:
    container_name: foodgram-project-react
    image: odolisk/foodgram-project-react
    volumes:
      - static_value:/code/backend/static_web/
      - media_value:/code/backend/media_web/
    command: >
      sh -c 'cd backend/ &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn foodgram_api.wsgi:application --bind 0.0.0.0:8000'
    depends_on:
      - db
    restart: 'on-failure'
    env_file:
      - .env
  frontend:
    container_name: foodgram-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/app/result_build/
  nginx:
    container_name: foodgram-nginx
    image: nginx:1.19.3
    ports:
      - '80:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static_web/
      - media_value:/var/html/media_web/
    depends_on:
      - web
networks:
  default:
    name: foodgram_network
volumes:
  static_value:
  media_value:
